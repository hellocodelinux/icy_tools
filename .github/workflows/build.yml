name: Build
on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [master]
    types: 
      - completed
env:
  CARGO_TERM_COLOR: always
jobs:
  build_windows:
    strategy:
      matrix:
        app: [icy_term, icy_draw, icy_view, icy_play]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Prepare FILE_ID.DIZ
      run: |
        $env:Path += ";C:\Program Files\Git\usr\bin"
        Get-Command sed
        Get-Command grep

        $VERSION=$(grep "^version\s*=" <crates/${{ matrix.app }}/Cargo.toml | sed -n 's/^version\s*=\s*\"//p' | sed -n 's/"//p')
        sed "s/#VERSION/$version/g" <.\crates\${{ matrix.app }}\build\file_id.diz  >file_id.diz
        echo "Version: $VERSION"
        
        Add-Content -Path $env:GITHUB_ENV -Value "VERSION=$VERSION"
        get-content .\crates\${{ matrix.app }}\build\file_id.diz | %{$_ -replace "#VERSION","$VERSION"} >file_id.diz
    - name: Build exe
      run: |
        cd .\crates\${{ matrix.app }}
        cargo build --release
    - name: 'Upload executable'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.app }}_${{ env.VERSION }}_windows_exe
        path: |
          .\target\release\${{ matrix.app }}.exe
          file_id.diz

#    - name: Build MSI installer.
#      shell: pwsh
#      env:
#        PFX_CONTENT: ${{ secrets.WINDOWS_CERTIFICATE_BASE64 }}
#      run: |
#        dotnet tool install --global wix --version 4.0.1
#        $encodedBytes=[System.Convert]::FromBase64String($env:PFX_CONTENT);
#        Set-Content "./cert.pfx" -Value $encodedBytes
#        echo "Building ${{ env.VERSION }} installerâ€¦"
#        wix extension add WixToolset.UI.wixext WixToolset.Util.wixext
#        wix build -arch "x64" -ext WixToolset.UI.wixext -ext WixToolset.Util.wixext -d "PATH=./cert.pfx" -d "VERSION=${{ env.VERSION }}"  -out "./${{ env.APP_NAME }}-${{ env.VERSION }}-installer.msi" "build/windows/installer.wxs"
#        del "./cert.pfx"
#    - name: 'Upload Artifact'
#      id: upload_msi
#      uses: actions/upload-artifact@v3
#      with:
#        name: ${{ matrix.app }}_${{ env.VERSION }}_windows_msi
#        path: |
#          ${{ matrix.app }}-${{ env.VERSION }}-installer.msi
#          file_id.diz
